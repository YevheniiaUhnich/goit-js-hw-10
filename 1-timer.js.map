{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst dateInput = document.getElementById('datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\nlet timerId = null;\nlet selectedDate = null;\nstartBtn.addEventListener('click', startTimer);\n\nflatpickr(dateInput, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= new Date()) {\n      iziToast.info({\n        position: 'topRight',\n        message: 'Please choose a date in the future',\n      });\n    } else {\n      selectedDate = selectedDates[0];\n      startBtn.removeAttribute('disabled');\n    }\n  },\n});\n\nfunction startTimer() {\n  timerId = setInterval(updateTimer, 1000);\n  startBtn.setAttribute('disabled', true);\n  dateInput.setAttribute('disabled', true);\n}\nfunction updateTimer() {\n  const diff = selectedDate - new Date();\n  const { days, hours, minutes, seconds } = convertMs(diff);\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n  if (diff <= 1000) {\n    clearInterval(timerId);\n    dateInput.removeAttribute('disabled');\n  }\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}"],"names":["dateInput","startBtn","daysEl","hoursEl","minutesEl","secondsEl","timerId","selectedDate","startTimer","flatpickr","selectedDates","iziToast","updateTimer","diff","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"2FAMA,MAAMA,EAAY,SAAS,eAAe,iBAAiB,EACrDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EACzD,IAAIC,EAAU,KACVC,EAAe,KACnBN,EAAS,iBAAiB,QAASO,CAAU,EAE7CC,EAAUT,EAAW,CACnB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQU,EAAe,CACjBA,EAAc,CAAC,GAAK,IAAI,KAC1BC,EAAS,KAAK,CACZ,SAAU,WACV,QAAS,oCACjB,CAAO,GAEDJ,EAAeG,EAAc,CAAC,EAC9BT,EAAS,gBAAgB,UAAU,EAEtC,CACH,CAAC,EAED,SAASO,GAAa,CACpBF,EAAU,YAAYM,EAAa,GAAI,EACvCX,EAAS,aAAa,WAAY,EAAI,EACtCD,EAAU,aAAa,WAAY,EAAI,CACzC,CACA,SAASY,GAAc,CACrB,MAAMC,EAAON,EAAe,IAAI,KAC1B,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAI,EACxDX,EAAO,YAAciB,EAAeL,CAAI,EACxCX,EAAQ,YAAcgB,EAAeJ,CAAK,EAC1CX,EAAU,YAAce,EAAeH,CAAO,EAC9CX,EAAU,YAAcc,EAAeF,CAAO,EAC1CJ,GAAQ,MACV,cAAcP,CAAO,EACrBN,EAAU,gBAAgB,UAAU,EAExC,CAEA,SAASmB,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CACA,SAASF,EAAUG,EAAI,CAQrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAE1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EAEpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EAEjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}